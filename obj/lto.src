	section	.text,"ax",@progbits
	assume	adl = 1
	section	.text,"ax",@progbits
	public	_update_columns
_update_columns:
	ld	hl, -42
	call	__frameset
	ld	bc, 590
	ld	de, -5
	ld	iy, 0
	ld	hl, (_update_columns.fall_direction)
	ld	(ix - 27), hl
	call	__imulu
	push	hl
	pop	bc
	add	hl, de
	ld	(ix - 6), hl
	ex	de, hl
	or	a, a
	sbc	hl, bc
	lea	bc, iy
	ld	(ix - 9), hl
	ld	de, 56
	ld	(ix - 12), bc
BB0_1:
	lea	hl, iy
	or	a, a
	sbc	hl, de
	jp	z, BB0_22
	lea	hl, iy
	ld	de, (ix - 27)
	add	hl, de
	ld	(ix - 33), hl
	ld	(ix - 30), iy
	lea	hl, iy
	or	a, a
	sbc	hl, de
	ld	(ix - 36), hl
	ld	hl, (ix - 12)
	ld	(ix - 3), hl
	ld	hl, (ix - 9)
	ld	(ix - 21), hl
	ld	hl, (ix - 6)
	ld	(ix - 18), hl
	push	bc
	pop	hl
	xor	a, a
	ld	(ix - 24), bc
BB0_3:
	ld	(ix - 15), hl
	ld	de, 590
	or	a, a
	sbc	hl, de
	jp	z, BB0_21
	bit	0, a
	jr	nz, BB0_8
	ld	de, (ix - 18)
	ld	hl, (ix + 6)
	add	hl, de
	ld	hl, (hl)
	add	hl, bc
	or	a, a
	sbc	hl, bc
	ld	hl, (ix - 33)
	jr	z, BB0_7
	ld	de, (ix - 21)
	ld	hl, (ix + 6)
	add	hl, de
	ld	hl, (hl)
	add	hl, bc
	or	a, a
	sbc	hl, bc
	ld	hl, (ix - 36)
	jr	nz, BB0_8
BB0_7:
	ld	bc, (ix - 3)
	ld	de, (ix + 6)
	push	de
	pop	iy
	add	iy, bc
	ld	(ix - 39), iy
	ld	bc, (iy)
	ld	(ix - 42), bc
	ld	bc, 590
	call	__imulu
	push	hl
	pop	bc
	push	de
	pop	iy
	add	iy, bc
	ld	bc, (ix - 15)
	add	iy, bc
	ld	bc, 0
	ld	hl, (ix - 42)
	ld	(iy - 5), hl
	ld	hl, (ix - 39)
	ld	(hl), bc
	ld	a, 1
	jp	BB0_20
BB0_8:
	ld	de, (ix - 3)
	ld	hl, (ix + 6)
	add	hl, de
	ld	de, (hl)
	push	de
	pop	hl
	add	hl, bc
	or	a, a
	sbc	hl, bc
	ld	a, 1
	jp	z, BB0_20
	ld	hl, (ix - 30)
	add	hl, bc
	or	a, a
	sbc	hl, bc
	jr	nz, BB0_12
	ld	de, (ix - 15)
	ld	iy, (ix + 6)
	add	iy, de
	ld	(iy + 3), 1
BB0_11:
	xor	a, a
	jp	BB0_20
BB0_12:
	ld	bc, (ix - 3)
	ld	hl, (ix + 6)
	add	hl, bc
	ld	bc, -587
	add	hl, bc
	bit	0, (hl)
	jr	z, BB0_14
	ld	bc, (ix - 3)
	ld	hl, (ix + 6)
	add	hl, bc
	push	de
	pop	bc
	ld	de, -590
	add	hl, de
	push	bc
	pop	de
	ld	hl, (hl)
	or	a, a
	sbc	hl, de
	ld	l, 1
	jr	z, BB0_17
BB0_14:
	ld	bc, (ix - 3)
	ld	hl, (ix + 6)
	push	hl
	pop	iy
	add	iy, bc
	bit	0, (iy - 2)
	push	hl
	pop	iy
	ld	l, 0
	jr	z, BB0_17
	ld	bc, (ix - 3)
	add	iy, bc
	ld	hl, (iy - 5)
	or	a, a
	sbc	hl, de
	ld	l, -1
	jr	z, BB0_17
	ld	l, 0
BB0_17:
	ld	bc, (ix - 3)
	ld	iy, (ix + 6)
	add	iy, bc
	ld	a, l
	and	a, 1
	ld	(iy + 3), a
	bit	0, l
	ld	a, 0
	jr	z, BB0_20
	ld	hl, (ix - 30)
	push	de
	pop	bc
	ld	de, 53
	or	a, a
	sbc	hl, de
	push	bc
	pop	de
	ld	a, 0
	jr	nz, BB0_20
	ld	hl, (ix + 6)
	push	hl
	push	de
	ld	hl, (ix - 24)
	push	hl
	ld	hl, 53
	push	hl
	call	_clear_from
	pop	hl
	pop	hl
	pop	hl
	pop	hl
	jp	BB0_11
BB0_20:
	ld	hl, (ix - 24)
	inc	hl
	ld	(ix - 24), hl
	ld	hl, 5
	ex	de, hl
	ld	iy, (ix - 15)
	add	iy, de
	ld	hl, (ix - 18)
	add	hl, de
	ld	(ix - 18), hl
	ld	hl, (ix - 21)
	add	hl, de
	ld	(ix - 21), hl
	lea	hl, iy
	ld	bc, 0
	ld	iy, (ix - 3)
	add	iy, de
	ld	(ix - 3), iy
	jp	BB0_3
BB0_21:
	ld	iy, (ix - 30)
	inc	iy
	ld	hl, 590
	ex	de, hl
	ld	hl, (ix - 6)
	add	hl, de
	ld	(ix - 6), hl
	ld	hl, (ix - 9)
	add	hl, de
	ld	(ix - 9), hl
	ld	hl, (ix - 12)
	add	hl, de
	ld	(ix - 12), hl
	ld	de, 56
	jp	BB0_1
BB0_22:
	ld	hl, (ix - 27)
	call	__ineg
	ld	(_update_columns.fall_direction), hl
	ld	sp, ix
	pop	ix
	ret
	section	.text,"ax",@progbits

	section	.text,"ax",@progbits
	public	_clear_from
_clear_from:
	ld	hl, -12
	call	__frameset
	ld	hl, (ix + 6)
	ld	iy, (ix + 9)
	ld	bc, 590
	lea	de, iy
	inc	de
	ld	(ix - 6), de
	lea	de, iy
	dec	de
	ld	(ix - 9), de
	ld	(ix - 3), hl
	call	__imulu
	push	hl
	pop	iy
	ld	hl, (ix + 9)
	ld	bc, 5
	call	__imulu
	push	hl
	pop	de
	add	iy, de
	lea	de, iy
	ld	iy, (ix + 15)
	add	iy, de
BB1_1:
	ld	hl, (iy)
	ld	de, (ix + 12)
	or	a, a
	sbc	hl, de
	jr	nz, BB1_3
	or	a, a
	sbc	hl, hl
	ld	(iy), hl
	ld	(iy + 4), 1
	ld	hl, (ix + 15)
	push	hl
	ld	hl, (ix + 12)
	push	hl
	ld	hl, (ix - 6)
	push	hl
	ld	hl, (ix - 3)
	push	hl
	ld	(ix - 12), iy
	call	_clear_from
	pop	hl
	pop	hl
	pop	hl
	pop	hl
	ld	hl, (ix + 15)
	push	hl
	ld	hl, (ix + 12)
	push	hl
	ld	hl, (ix - 9)
	push	hl
	ld	hl, (ix - 3)
	push	hl
	call	_clear_from
	pop	hl
	pop	hl
	pop	hl
	pop	hl
	ld	de, (ix - 3)
	inc	de
	ld	(ix - 3), de
	ld	hl, (ix + 15)
	push	hl
	ld	hl, (ix + 12)
	push	hl
	ld	hl, (ix + 9)
	push	hl
	push	de
	call	_clear_from
	ld	iy, (ix - 12)
	pop	hl
	pop	hl
	pop	hl
	pop	hl
	ld	de, -590
	add	iy, de
	ld	de, -2
	ld	hl, (ix - 3)
	add	hl, de
	ld	(ix - 3), hl
	jr	BB1_1
BB1_3:
	ld	sp, ix
	pop	ix
	ret
	section	.text,"ax",@progbits

	section	.text,"ax",@progbits
	public	_main
_main:
	call	_gfx_Begin
	or	a, a
	sbc	hl, hl
	push	hl
	ld	hl, 12
	push	hl
	ld	hl, _global_palette
	push	hl
	call	_gfx_SetPalette
	pop	hl
	pop	hl
	pop	hl
	ld	hl, 1
	push	hl
	call	_gfx_SetDraw
	pop	hl
BB2_1:
	call	_step
	bit	0, a
	jr	z, BB2_3
	call	_draw
	call	_gfx_SwapDraw
	jr	BB2_1
BB2_3:
	call	_gfx_End
	or	a, a
	sbc	hl, hl
	ret
	section	.text,"ax",@progbits

	section	.text,"ax",@progbits
	public	_step
_step:
	ld	hl, -9
	call	__frameset
	call	_kb_Scan
	ld	hl, -720868
	push	de
	ld	e, (hl)
	inc	hl
	ld	d, (hl)
	ld	l, e
	ld	h, d
	pop	de
	ld.sis	bc, 64
	call	__sand
	ld	a, l
	or	a, a
	jp	nz, BB3_18
	ld	(ix - 3), hl
	ld	iy, -720866
	ld.sis	bc, 1
	ld	l, (iy)
	ld	h, (iy + 1)
	ld	a, l
	bit	3, a
	jr	z, BB3_3
	ld	hl, (_step.placer_y)
	inc	hl
	ld	(_step.placer_y), hl
BB3_3:
	ld	l, (iy)
	ld	h, (iy + 1)
	call	__sand
	bit	0, l
	jr	z, BB3_5
	ld	hl, (_step.placer_y)
	dec	hl
	ld	(_step.placer_y), hl
BB3_5:
	ld	l, (iy)
	ld	h, (iy + 1)
	ld	a, l
	bit	2, a
	jr	z, BB3_7
	ld	hl, (_step.placer_x)
	inc	hl
	ld	(_step.placer_x), hl
BB3_7:
	ld	l, (iy)
	ld	h, (iy + 1)
	ld	a, l
	bit	1, a
	jr	z, BB3_9
	ld	hl, (_step.placer_x)
	dec	hl
	ld	(_step.placer_x), hl
BB3_9:
	ld.sis	de, 32
	ld	hl, -720868
	push	de
	ld	e, (hl)
	inc	hl
	ld	d, (hl)
	ld	l, e
	ld	h, d
	pop	de
	call	__sand
	bit	0, l
	jr	z, BB3_11
	ld	hl, (_step.placer_type)
	ld	(ix - 6), hl
	ld	hl, (_step.placer_x)
	ld	de, (_step.placer_y)
	ld	bc, 590
	call	__imulu
	push	hl
	pop	bc
	ld	iy, _pixels
	add	iy, bc
	ld	bc, 5
	ex	de, hl
	call	__imulu
	push	hl
	pop	de
	add	iy, de
	ld	hl, (ix - 6)
	ld	(iy), hl
	ld.sis	de, 32
BB3_11:
	ld	hl, -720878
	push	de
	ld	e, (hl)
	inc	hl
	ld	d, (hl)
	ld	l, e
	ld	h, d
	pop	de
	ld	c, e
	ld	b, d
	call	__sand
	ex	de, hl
	ld	iyl, e
	ld	iyh, d
	ex	de, hl
	ld	c, 5
	call	__sshru
	ld	(ix - 6), hl
	ld	hl, -720876
	push	de
	ld	e, (hl)
	inc	hl
	ld	d, (hl)
	ld	l, e
	ld	h, d
	pop	de
	ld.sis	bc, 128
	call	__sand
	ld	e, l
	ld	d, h
	ld	c, 7
	call	__sshru
	ld	(ix - 9), hl
	ld	a, (_step.lsecond)
	ld	l, a
	ld	a, iyl
	or	a, a
	jr	z, BB3_14
	ld	a, l
	or	a, a
	jr	nz, BB3_14
	ld	iy, (_step.placer_type)
	lea	hl, iy
	ld	bc, 4
	or	a, a
	sbc	hl, bc
	ccf
	sbc	hl, hl
	push	hl
	pop	bc
	inc	bc
	add	iy, bc
	ld	(_step.placer_type), iy
BB3_14:
	ld	a, (_step.lalpha)
	ld	l, a
	ld	a, e
	or	a, a
	jr	z, BB3_17
	ld	a, l
	or	a, a
	jr	nz, BB3_17
	ld	iy, (_step.placer_type)
	ld	de, 2
	lea	hl, iy
	or	a, a
	sbc	hl, de
	ccf
	sbc	hl, hl
	push	hl
	pop	de
	add	iy, de
	ld	(_step.placer_type), iy
BB3_17:
	ld	hl, (ix - 6)
	ld	a, l
	ld	(_step.lsecond), a
	ld	hl, (ix - 9)
	ld	a, l
	ld	(_step.lalpha), a
	ld	hl, _pixels
	push	hl
	call	_update_columns
	pop	hl
	ld	hl, (ix - 3)
BB3_18:
	ld	a, l
	or	a, a
	jr	z, BB3_20
	ld	a, 0
	jr	BB3_21
BB3_20:
	ld	a, -1
BB3_21:
	ld	sp, ix
	pop	ix
	ret
	section	.text,"ax",@progbits

	section	.text,"ax",@progbits
	public	_draw
_draw:
	ld	hl, -15
	call	__frameset
	ld	iy, _pixels
	ld	de, 0
BB4_1:
	ld	bc, 56
	push	de
	pop	hl
	or	a, a
	sbc	hl, bc
	jp	z, BB4_9
	ld	(ix - 12), de
	ex	de, hl
	ld	c, 1
	call	__ishl
	ld	(ix - 15), hl
	ld	a, -16
	ld	e, a
	or	a, a
	sbc	hl, hl
BB4_3:
	ld	(ix - 3), hl
	ld	bc, 590
	or	a, a
	sbc	hl, bc
	jr	z, BB4_8
	ld	(ix - 6), de
	ld	bc, 5
	ld	de, (ix - 3)
	lea	hl, iy
	add	iy, de
	bit	0, (iy + 4)
	ld	(ix - 9), hl
	jr	nz, BB4_6
	ld	de, (ix - 3)
	add	hl, de
	ld	l, (hl)
	jr	BB4_7
BB4_6:
	ld	(iy + 4), 0
	push	bc
	pop	hl
BB4_7:
	push	hl
	call	_gfx_SetColor
	pop	hl
	ld	hl, 2
	push	hl
	push	hl
	ld	hl, (ix - 6)
	push	hl
	ld	hl, (ix - 15)
	push	hl
	call	_gfx_Rectangle_NoClip
	pop	hl
	pop	hl
	pop	hl
	pop	hl
	ld	hl, (ix - 3)
	ld	de, 5
	add	hl, de
	ld	de, (ix - 6)
	ld	a, e
	add	a, -2
	ld	e, a
	ld	iy, (ix - 9)
	jr	BB4_3
BB4_8:
	ld	de, (ix - 12)
	inc	de
	ld	bc, 590
	add	iy, bc
	jp	BB4_1
BB4_9:
	ld	sp, ix
	pop	ix
	ret
	section	.text,"ax",@progbits

	section	.text,"ax",@progbits
	public	_begin
_begin:
	ret
	section	.text,"ax",@progbits

	section	.text,"ax",@progbits
	public	_end
_end:
	ret
	section	.text,"ax",@progbits

	section	.data,"aw",@progbits
	private	_update_columns.fall_direction
_update_columns.fall_direction:
	dl	1

	section	.data,"aw",@progbits
	public	_global_palette
_global_palette:
	db	"!Æè#ë˜", 26, "…", 10, "þ{"

	section	.bss,"aw",@nobits
	private	_step.placer_x
_step.placer_x:
	rb	3

	section	.bss,"aw",@nobits
	private	_step.placer_y
_step.placer_y:
	rb	3

	section	.data,"aw",@progbits
	private	_step.placer_type
_step.placer_type:
	dl	1

	section	.bss,"aw",@nobits
	public	_pixels
_pixels:
	rb	33040

	section	.bss,"aw",@nobits
	private	_step.lsecond
_step.lsecond:
	rb	1

	section	.bss,"aw",@nobits
	private	_step.lalpha
_step.lalpha:
	rb	1

	ident	"clang version 15.0.0 (https://github.com/jacobly0/llvm-project 6d9aa7a16db70f3d02ae304b08d4a03011281fef)"
	ident	"clang version 15.0.0 (https://github.com/jacobly0/llvm-project 6d9aa7a16db70f3d02ae304b08d4a03011281fef)"
	ident	"clang version 15.0.0 (https://github.com/jacobly0/llvm-project 6d9aa7a16db70f3d02ae304b08d4a03011281fef)"
	extern	__Unwind_SjLj_Register
	extern	__frameset
	extern	_gfx_Rectangle_NoClip
	extern	_gfx_Begin
	extern	_kb_Scan
	extern	_gfx_SetPalette
	extern	__sand
	extern	_gfx_SwapDraw
	extern	__ishl
	extern	__sshru
	extern	_gfx_SetDraw
	extern	__Unwind_SjLj_Unregister
	extern	__imulu
	extern	_gfx_SetColor
	extern	__ineg
	extern	_gfx_End
